import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import ru.yandex.qatools.ashot.AShot;
import ru.yandex.qatools.ashot.shooting.ShootingStrategies;

import javax.imageio.ImageIO;
import java.io.File;
import java.io.IOException;

public class WebpageScreenshot {

    public static void main(String[] args) {
        // Set the path to your ChromeDriver executable
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");

        // Create a new instance of the ChromeDriver
        WebDriver driver = new ChromeDriver();

        // Replace "https://example.com" with the URL of the webpage you want to capture
        String url = "https://example.com";
        driver.get(url);

        // Maximize the window to ensure the entire webpage is visible
        driver.manage().window().maximize();

        // Take a screenshot of the entire webpage with additional AShot settings
        AShot ashot = new AShot().shootingStrategy(ShootingStrategies.viewportPasting(1000)).fully().withScrollTimeout(500);
        try {
            File screenshotFile = new File("path/to/screenshot.png");
            ImageIO.write(ashot.takeScreenshot(driver).getImage(), "PNG", screenshotFile);
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Close the browser
        driver.quit();
    }
}


import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import javax.imageio.ImageIO;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class WebpageScreenshot {

    public static void main(String[] args) throws InterruptedException {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        WebDriver driver = new ChromeDriver();
        JavascriptExecutor js = (JavascriptExecutor) driver;

        driver.get("https://example.com");
        Thread.sleep(2000); // Allow time for page to load

        int scrollHeight = ((Number) js.executeScript("return Math.max( document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight );")).intValue();
        int windowHeight = ((Number) js.executeScript("return window.innerHeight;")).intValue();

        int scrollPosition = 0;

        while (scrollPosition < scrollHeight) {
            captureAndMergeScreenshots(driver, scrollPosition);
            scrollPosition += windowHeight;
            js.executeScript("window.scrollTo(0, " + scrollPosition + ");");
            Thread.sleep(2000); // Adjust sleep time as needed
        }

        driver.quit();
    }

    private static void captureAndMergeScreenshots(WebDriver driver, int scrollPosition) throws IOException {
        File screenshotFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        BufferedImage screenshotImage = ImageIO.read(screenshotFile);

        File overlapFile = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        BufferedImage overlapImage = ImageIO.read(overlapFile);

        // Compare, remove overlap, and merge images

        ImageIO.write(screenshotImage, "png", new File("path/to/save/screenshot.png"));
    }
}


import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;

import java.io.File;
import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;

public class FullPageScreenshot {
    public static void main(String[] args) {
        // Set the path to your ChromeDriver executable
        System.setProperty("webdriver.chrome.driver", "/path/to/chromedriver");

        // Create a new instance of the Chrome driver
        WebDriver driver = new ChromeDriver();

        // Navigate to the webpage
        driver.get("https://example.com");

        // Execute JavaScript to scroll to the bottom of the page
        JavascriptExecutor js = (JavascriptExecutor) driver;
        js.executeScript("window.scrollTo(0, document.body.scrollHeight)");

        // Take a screenshot of the entire page
        File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);

        try {
            // Save the screenshot to a file
            FileUtils.copyFile(screenshot, new File("/path/to/fullpage_screenshot.png"));
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Close the browser
        driver.quit();
    }
}


import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;

import java.io.File;

public class FullPageScreenshotFirefox {
    public static void main(String[] args) {
        // Set the path to your GeckoDriver executable
        System.setProperty("webdriver.gecko.driver", "/path/to/geckodriver");

        // Create a Firefox profile to enable the built-in full-page screenshot capability
        FirefoxProfile profile = new FirefoxProfile();
        profile.setPreference("devtools.screenshot.fullpage", true);

        // Set up Firefox options with the custom profile
        FirefoxOptions options = new FirefoxOptions().setProfile(profile);

        // Create a new instance of the Firefox driver
        WebDriver driver = new FirefoxDriver(options);

        // Navigate to the webpage
        driver.get("https://example.com");

        // Take a screenshot of the entire page (full page)
        File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);

        try {
            // Save the screenshot to a file
            FileUtils.copyFile(screenshot, new File("/path/to/fullpage_screenshot_firefox.png"));
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Close the browser
        driver.quit();
    }
}


import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;

import java.nio.file.Path;
import java.nio.file.Paths;

public class FullPageScreenshotFirefox {
    public static void main(String[] args) {
        // Set the path to your GeckoDriver executable
        System.setProperty("webdriver.gecko.driver", "/path/to/geckodriver");

        // Create FirefoxOptions to enable the built-in screenshot capabilities
        FirefoxOptions options = new FirefoxOptions();
        options.addPreference("devtools.screenshot.fullpage", true);

        // Create a new instance of the Firefox driver with the custom options
        WebDriver driver = new FirefoxDriver(options);

        // Navigate to the webpage
        driver.get("https://example.com");

        // Find an element on the page (you can adjust this based on your page structure)
        WebElement element = driver.findElement(By.tagName("body"));

        // Take a full-page screenshot using the developer tool
        Path screenshotPath = Paths.get("/path/to/fullpage_screenshot_firefox.png");
        driver.findElement(By.tagName("body")).sendKeys("\uE034");
        // Above sends the F12 key (developer tools shortcut) to the body element

        try {
            // Wait for the screenshot to be captured and saved
            Thread.sleep(3000);

            // You can also wait for some specific element to appear or certain conditions before proceeding

            // Move the screenshot to the desired location
            Path finalScreenshotPath = Paths.get("/path/to/final_screenshot.png");
            Path temporaryScreenshotPath = Paths.get(driver.getFullScreenshotAs(screenshotPath.toFile()));

            // Rename the file to the desired location
            temporaryScreenshotPath.toFile().renameTo(finalScreenshotPath.toFile());
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // Close the browser
            driver.quit();
        }
    }
}


