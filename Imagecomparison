import org.apache.commons.imaging.ImageReadException;
import org.apache.commons.imaging.ImageWriteException;
import org.apache.commons.imaging.Sanselan;
import org.apache.commons.imaging.common.ImageMetadata;
import org.apache.commons.imaging.common.bytesource.ByteSourceFile;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.constants.TiffTagConstants;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputDirectory;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputField;
import org.apache.commons.imaging.formats.tiff.write.TiffOutputSet;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class ImageComparisonWithHighlight {

    public static void main(String[] args) {
        try {
            // Load original and modified images
            BufferedImage originalImage = Sanselan.getBufferedImage(new File("path/to/original.jpg"));
            BufferedImage modifiedImage = Sanselan.getBufferedImage(new File("path/to/modified.jpg"));

            // Compare images and highlight differences
            BufferedImage diffImage = highlightDifferences(originalImage, modifiedImage);

            // Save the resulting image with highlighted differences
            Sanselan.writeImage(diffImage, new File("path/to/differences_highlighted.jpg"), Sanselan.IMAGE_TYPE_JPEG, null);

        } catch (ImageReadException | ImageWriteException | IOException e) {
            e.printStackTrace();
        }
    }

    private static BufferedImage highlightDifferences(BufferedImage original, BufferedImage modified) {
        int width = original.getWidth();
        int height = original.getHeight();

        BufferedImage diffImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);

        for (int x = 0; x < width; x++) {
            for (int y = 0; y < height; y++) {
                int rgbOriginal = original.getRGB(x, y);
                int rgbModified = modified.getRGB(x, y);

                // If pixels are different, highlight the difference
                if (rgbOriginal != rgbModified) {
                    diffImage.setRGB(x, y, 0xFF0000); // Highlight in red
                } else {
                    diffImage.setRGB(x, y, rgbOriginal);
                }
            }
        }

        return diffImage;
    }
}