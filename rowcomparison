package org.example;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.ss.usermodel.*;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.example.ComparetwoHeaders.getHeaders;
import static org.example.printCountNumber.headerIndex;

public class javarowcount {

        public static void main(String[] args) {
            String excelFilePath1 = "C:\\Users\\91720\\IdeaProjects\\Pilot\\src\\test\\java\\Excel.xlsx";
            String sheetName1 = "Sheet1";  // Replace with your sheet name
            String sheetName2 = "Sheet2";  // Replace with your sheet name

            try (FileInputStream fis1 = new FileInputStream(excelFilePath1);
                 Workbook workbook1 = WorkbookFactory.create(fis1);
                 FileInputStream fis2 = new FileInputStream(excelFilePath1);
                 Workbook workbook2 = WorkbookFactory.create(fis2)) {

                Sheet sheet1 = workbook1.getSheet(sheetName1);
                Sheet sheet2 = workbook2.getSheet(sheetName2);

                if (sheet1 != null && sheet2 != null) {
                    // Select the reference row from sheet1 (e.g., row 1)
                    Row referenceRow = sheet1.getRow(1);  // Change this to the desired row number

                    List<String> headers1 = getHeaders(sheet1);
                    List<String> headers2 = getHeaders(sheet2);

                    // Find common headers
                    List<String> commonHeaders = new ArrayList<>(headers1);
                    commonHeaders.retainAll(headers2);

                    // Print common headers
                    System.out.println("Common Headers:");
                    commonHeaders.forEach(System.out::println);

                    // Compare all rows in sheet2 with the reference row from sheet1
                    compareRows(sheet1, referenceRow, sheet2, commonHeaders);
                } else {
                    System.out.println("Sheet not found in one or both workbooks.");
                }

            } catch (IOException | EncryptedDocumentException e) {
                e.printStackTrace();
            }
        }

        // ...

        private static void compareRows(Sheet sheet1, Row referenceRow, Sheet sheet2, List<String> commonHeaders) {
            int maxRows = sheet2.getLastRowNum();

            // Iterate through rows in sheet2
            for (int i = 1; i <= maxRows; i++) {  // Start from row 1 (assuming headers are in row 0)
                Row row2 = sheet2.getRow(i);

                // Compare values based on common headers with the reference row from sheet1
                int matchedHeaders = 0;
                for (String header : commonHeaders) {
                    Cell cell1 = referenceRow.getCell(headerIndex(sheet1, header), Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);
                    Cell cell2 = row2.getCell(headerIndex(sheet2, header), Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);

                    if (cell1.getStringCellValue().equals(cell2.getStringCellValue())) {
                        matchedHeaders++;
                    }
                }

                // Print row number if all headers match
                if (matchedHeaders == commonHeaders.size()) {
                    System.out.println("All headers match in row: " + (i));  // Add 1 to convert to 1-based index
                }
            }
        }

      package org.example;
import org.apache.poi.EncryptedDocumentException;
import org.apache.poi.ss.usermodel.*;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import static org.example.ComparetwoHeaders.getHeaders;
import static org.example.printCountNumber.headerIndex;

public class javarowcount {

        public static void main(String[] args) {
            String excelFilePath1 = "C:\\Users\\91720\\IdeaProjects\\Pilot\\src\\test\\java\\Excel.xlsx";
            String sheetName1 = "Sheet1";  // Replace with your sheet name
            String sheetName2 = "Sheet2";  // Replace with your sheet name

            try (FileInputStream fis1 = new FileInputStream(excelFilePath1);
                 Workbook workbook1 = WorkbookFactory.create(fis1);
                 FileInputStream fis2 = new FileInputStream(excelFilePath1);
                 Workbook workbook2 = WorkbookFactory.create(fis2)) {

                Sheet sheet1 = workbook1.getSheet(sheetName1);
                Sheet sheet2 = workbook2.getSheet(sheetName2);

                if (sheet1 != null && sheet2 != null) {
                    // Select the reference row from sheet1 (e.g., row 1)
                    Row referenceRow = sheet1.getRow(1);  // Change this to the desired row number

                    List<String> headers1 = getHeaders(sheet1);
                    List<String> headers2 = getHeaders(sheet2);

                    // Find common headers
                    List<String> commonHeaders = new ArrayList<>(headers1);
                    commonHeaders.retainAll(headers2);

                    // Print common headers
                    System.out.println("Common Headers:");
                    commonHeaders.forEach(System.out::println);

                    // Compare all rows in sheet2 with the reference row from sheet1
                    compareRows(sheet1, referenceRow, sheet2, commonHeaders);
                } else {
                    System.out.println("Sheet not found in one or both workbooks.");
                }

            } catch (IOException | EncryptedDocumentException e) {
                e.printStackTrace();
            }
        }

        // ...

        private static void compareRows(Sheet sheet1, Row referenceRow, Sheet sheet2, List<String> commonHeaders) {
            int maxRows = sheet2.getLastRowNum();

            // Iterate through rows in sheet2
            for (int i = 1; i <= maxRows; i++) {  // Start from row 1 (assuming headers are in row 0)
                Row row2 = sheet2.getRow(i);

                // Compare values based on common headers with the reference row from sheet1
                int matchedHeaders = 0;
                for (String header : commonHeaders) {
                    Cell cell1 = referenceRow.getCell(headerIndex(sheet1, header), Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);
                    Cell cell2 = row2.getCell(headerIndex(sheet2, header), Row.MissingCellPolicy.CREATE_NULL_AS_BLANK);

                    if (cell1.getStringCellValue().equals(cell2.getStringCellValue())) {
                        matchedHeaders++;
                    }
                }

                // Print row number if all headers match
                if (matchedHeaders == commonHeaders.size()) {
                    System.out.println("All headers match in row: " + (i));  // Add 1 to convert to 1-based index
                }
            }
        }
    static List<String> getHeaders(Sheet sheet) {
        List<String> headers = new ArrayList<>();
        Row headerRow = sheet.getRow(0);
        if (headerRow != null) {
            for (Cell cell : headerRow) {
                headers.add(cell.getStringCellValue());
            }
        }
        return headers;
    }
    static int headerIndex(Sheet sheet, String header) {
        Row headerRow = sheet.getRow(0);
        for (int i = 0; i < headerRow.getLastCellNum(); i++) {
            Cell cell = headerRow.getCell(i);
            if (header.equals(cell.getStringCellValue())) {
                return i;
            }
        }
        return -1;  // Header not found
    }

}

    }
